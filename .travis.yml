language: cpp

notifications:
  email: false

sudo: true

compiler: gcc

os: linux

before_install:
  - sudo apt-get install -y megatools python3-setuptools python3-pip
  - python3 -m pip install --upgrade pip
  - python3 -m pip install -r modules/8_reinforcement_learning/requirements.txt
  # Install OpenVINO
  - sudo curl -o GPG-PUB-KEY-INTEL-OPENVINO-2020 https://apt.repos.intel.com/openvino/2020/GPG-PUB-KEY-INTEL-OPENVINO-2020
  - sudo apt-key add GPG-PUB-KEY-INTEL-OPENVINO-2020
  - sudo echo "deb https://apt.repos.intel.com/openvino/2020 all main" | sudo tee - a /etc/apt/sources.list.d/intel-openvino-2020.list
  - sudo apt-get update
  - sudo apt-get install -y --no-install-recommends intel-openvino-dev-ubuntu16-2020.2.130
  # Download test data
  - wget https://download.01.org/opencv/2020/openvinotoolkit/2020.3/open_model_zoo/models_bin/1/face-detection-0104/FP32/face-detection-0104.bin -O data/face-detection-0104.bin

  - wget http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz -O data/train-images.idx3-ubyte.gz && gzip -d data/train-images.idx3-ubyte.gz
  - wget http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz -O data/train-labels.idx1-ubyte.gz && gzip -d data/train-labels.idx1-ubyte.gz
  - wget http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz -O data/t10k-images.idx3-ubyte.gz && gzip -d data/t10k-images.idx3-ubyte.gz
  - wget http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz -O data/t10k-labels.idx1-ubyte.gz && gzip -d data/t10k-labels.idx1-ubyte.gz

  - wget https://download.01.org/opencv/2020/openvinotoolkit/2020.3/open_model_zoo/models_bin/1/semantic-segmentation-adas-0001/FP32/semantic-segmentation-adas-0001.bin -O data/semantic-segmentation-adas-0001.bin
  - wget https://download.01.org/opencv/2020/openvinotoolkit/2020.3/open_model_zoo/models_bin/1/semantic-segmentation-adas-0001/FP32/semantic-segmentation-adas-0001.xml -O data/semantic-segmentation-adas-0001.xml

  - wget https://www.dropbox.com/s/2fnlv87zbwra6az/distilbert.bin?dl=1 -O data/distilbert.bin
  - wget https://www.dropbox.com/s/06bnkjr2pkpeyff/distilbert.xml?dl=1 -O data/distilbert.xml

  - megadl 'https://mega.nz/#!9cFFwAQb!NwSZ_j35wCcD9LUEbw9yrp-DsT37AvGQB5YWtfw3-0w' --path data
  - megadl 'https://mega.nz/#!cBcHTA6Y!1FIiHhDCLSbW_Ba4zVIbSNQGgJB8mTCEjMjYgSwPh5M' --path data

  # origin weights are from https://github.com/NifTK/NiftyNetModelZoo/tree/5-reorganising-with-lfs/unet_histology
  - wget https://www.dropbox.com/s/hhu6ojkgru93poh/frozen_unet_histology.pb?dl=1 -O data/frozen_unet_histology.pb
  # TODO: Implement frozen_unet_histology.pb model conversion with OpenVINO
  # (note that TensorFlow accepts input tensor of shape 1,952,1144,1,1,3)

script:
  - source /opt/intel/openvino/bin/setupvars.sh -pyver 3.5
  - export PYTHONPATH=$(ls modules | xargs -I {} sh -c 'printf $(pwd)/modules/{}:')$PYTHONPATH
  - mkdir build && cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release && make -j8
  # Run tests only for changes modules
  - git diff --name-only HEAD^ ../modules/ | cut -d "/" -f2 | sed -E "s/[0-9]+_(.*)/\1/" | uniq | xargs -I '{}' sh -c './bin/test_{}'
